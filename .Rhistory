## Make sure that you installed the following packages:
## -- Rcpp, RcppArmadillo, devtools, roxygen2, usethis
## -- For Mac OS X, special configurations are required (see slides)
setwd("~/Desktop/Coursework/815/Final_Project/")
setwd("./ADMMImpute") ## change working directory
devtools::load_all() # load all functions
## TODO LIST ##################################
## remove Read-and-delete-me
## Modify DESCRIPTION to provide key information
## Modify man/pkgName.Rd to document the package
## Copy the R codes to R/
## Copy the cpp codes to src/
################################################
usethis::use_gpl3_license("Ying Ma") # Add license
compileAttributes(verbose=TRUE) # Find and register Rcpp functions
library(RcppArmadillo)
library(Rcpp)
compileAttributes(verbose=TRUE) # Find and register Rcpp functions
devtools::load_all() # load all functions
devtools::document() # create roxygen2 document
devtools::check() # check whether the package is OK
devtools::build() # build a package
install.packages("../ADMMImpute_1.0.tar.gz",repos = NULL)
compileAttributes(verbose=TRUE) # Find and register Rcpp functions
devtools::load_all() # load all functions
devtools::load_all() # load all functions
devtools::document() # create roxygen2 document
devtools::check() # check whether the package is OK
devtools::load_all() # load all functions
devtools::document() # create roxygen2 document
devtools::check() # check whether the package is OK
devtools::check() # check whether the package is OK
install.packages("../ADMMImpute_1.0.tar.gz",repos = NULL)
library(ADMMImpute)
tic <- proc.time()
res = Impute(raw_count,labeled,labels,numCluster,drop_thre)
dim(raw_count)
raw_count = read.csv("~/Desktop/Coursework/815/Final_Project/GSE75748_sc_cell_type_ec.csv",header=T,row.names=1)
celltype=gsub("(.+?)(\\_.*)", "\\1", colnames(raw_count))
celltype = as.factor(celltype)
celltype = as.numeric(celltype)
raw_count = as.matrix(raw_count)
labeled = TRUE
labels = celltype
numCluster = 7
drop_thre = 0.75
library(ADMMImpute)
tic <- proc.time()
drop_thre = 0.5
library(ADMMImpute)
tic <- proc.time()
tic <- proc.time()
res = Impute(raw_count,labeled,labels,numCluster,drop_thre)
toc <- proc.time()
devtools::load_all() # load all functions
## TODO LIST ##################################
## remove Read-and-delete-me
## Modify DESCRIPTION to provide key information
## Modify man/pkgName.Rd to document the package
## Copy the R codes to R/
## Copy the cpp codes to src/
################################################
usethis::use_gpl3_license("Ying Ma") # Add license
compileAttributes(verbose=TRUE) # Find and register Rcpp functions
devtools::load_all() # load all functions
devtools::document() # create roxygen2 document
devtools::check() # check whether the package is OK
devtools::build() # build a package
install.packages("../ADMMImpute_1.0.tar.gz",repos = NULL)
library(ADMMImpute)
tic <- proc.time()
res = Impute(raw_count,labeled,labels,numCluster,drop_thre)
toc <- proc.time()
toc - tic
sum(res)
sum(raw_count)
res[1:5,1:5]
raw_count[1:5,1:5]
sum(sc)
sourceCpp("~/Desktop/Coursework/815/Final_Project/Armadillo/Finished_sameSpeed/imputation_model.cpp")
sourceCpp("~/Desktop/Coursework/815/Final_Project/Armadillo/Finished_sameSpeed/read_count.cpp")
norm_count = read_count(raw_count)
count_hv = find_hv_genes(norm_count)
dist_list = neighbors_res[[1]]
clust = neighbors_res[[2]];
cluster = unique(clust)
neighbors_res = find_neighbors(count_hv,celltype);
dist_list = neighbors_res[[1]]
clust = neighbors_res[[2]];
cluster = unique(clust)
point = log10(1.01)
cc = 0
drop_thre = 0.75
cell_inds = which(clust == cluster[(cc+1)])
paramt = get_mix_parameters(norm_count[,cell_inds],point)
valid_genes = find_va_genes(paramt, norm_count[,cell_inds]);
subcount = norm_count[(valid_genes+1),cell_inds];
subparamt = paramt[(valid_genes+1),]
droprate = get_droprate(subcount,subparamt,drop_thre)
cellid = 0
neighbors = which(cell_inds != (cellid+1))
geneid_drop = which(droprate[,(cellid+1)] > drop_thre)
geneid_obs = which(droprate[,(cellid+1)] <= drop_thre)
rho = 100
max_iter = 10000
tol = 1e-4
ym_impute = imputation_wlabel_model(as.matrix(norm_count),celltype,point,0.75,rho,max_iter,tol)
sum()ym_impute
sum(ym_impute)
totalCounts_by_cell = colSums(raw_count)
ym_impute1 = 10^ym_impute  - 1.01
count_imp = sweep(ym_impute1, MARGIN = 2, totalCounts_by_cell/10^6,
FUN = "*")
count_imp = round(count_imp, digits = 2)
sum(ym_impute)
sum(count_imp)
## TODO LIST ##################################
## remove Read-and-delete-me
## Modify DESCRIPTION to provide key information
## Modify man/pkgName.Rd to document the package
## Copy the R codes to R/
## Copy the cpp codes to src/
################################################
usethis::use_gpl3_license("Ying Ma") # Add license
compileAttributes(verbose=TRUE) # Find and register Rcpp functions
devtools::load_all() # load all functions
devtools::document() # create roxygen2 document
devtools::check() # check whether the package is OK
devtools::build() # build a package
install.packages("../ADMMImpute_1.0.tar.gz",repos = NULL)
library(ADMMImpute)
tic <- proc.time()
res = Impute(raw_count,labeled,labels,numCluster,drop_thre)
sum(res)
## TODO LIST ##################################
## remove Read-and-delete-me
## Modify DESCRIPTION to provide key information
## Modify man/pkgName.Rd to document the package
## Copy the R codes to R/
## Copy the cpp codes to src/
################################################
usethis::use_gpl3_license("Ying Ma") # Add license
compileAttributes(verbose=TRUE) # Find and register Rcpp functions
devtools::load_all() # load all functions
devtools::document() # create roxygen2 document
## Make sure that you installed the following packages:
## -- Rcpp, RcppArmadillo, devtools, roxygen2, usethis
## -- For Mac OS X, special configurations are required (see slides)
setwd("~/Desktop/Coursework/815/Final_Project/")
library(Rcpp)
library(RcppArmadillo)
RcppArmadillo.package.skeleton("ADMMImpute", example_code = FALSE)
setwd("./ADMMImpute") ## change working directory
setwd("./ADMMImpute") ## change working directory
## TODO LIST ##################################
## remove Read-and-delete-me
## Modify DESCRIPTION to provide key information
## Modify man/pkgName.Rd to document the package
## Copy the R codes to R/
## Copy the cpp codes to src/
################################################
usethis::use_gpl3_license("Ying Ma") # Add license
compileAttributes(verbose=TRUE) # Find and register Rcpp functions
devtools::load_all() # load all functions
devtools::document() # create roxygen2 document
devtools::check() # check whether the package is OK
devtools::build() # build a package
